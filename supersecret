#!/usr/bin/perl

package Super::Secret;

use strict;
use warnings;

use Dancer qw/:syntax/;
use Dancer::Response;
use MIME::Base64;

get '/' => sub {
	my $html = qq|
		<!DOCTYPE html>
		<html lang="en_US">
		<head>
			<meta charset="UTF-8">
			<title>Secret Homepage</title>
		</head>
		<body>
			<center><h2><a href="/secret">Guess the Super Secret password.</a></h2></center>
		</body>
		</html>
	|;
	return $html;
};

get '/secret' => sub {
	my $auth = request->header('Authorization');

	my $html = qq|
		<!DOCTYPE html>
		<html lang="en_US">
		<head>
			<meta charset="UTF-8">
			<title>Secret Area</title>
		</head>
		<body>
			<center><h1>Supersecret Area!</h1></center>
		</body>
		</html>
	|;
	if (defined $auth && $auth =~ /^Basic (.*)$/) {
		my ($user, $password) = split(/:/, (MIME::Base64::decode($1) || ":"));
		if ($user eq 'super' && $password eq 'secret') {
			request->env->{REMOTE_USER} = $user;
			return $html;
		}
	}

	my $content = "You are not allowed to supersecret!";
	return halt(Dancer::Response->new(
		status  => 401,
		content => $content,
		headers => [
			'Content-Type'     => 'text/plain',
			'Content-Length'   =>  length($content),
			'WWW-Authenticate' => 'Basic realm="secret"',
		]
	));
};

my $PORT = $ARGV[0] || 3000;
$0 = __PACKAGE__;
my $server;
if (eval 'use Plack::Handler::Gazelle; 1') {
	print STDERR "Using Gazelle\n";
	$server = Plack::Handler::Gazelle->new(
		port    => $PORT,
		workers => $ARGV[1] || 8, # We expect lots of secret traffic
		argv    => [__PACKAGE__,],
	);
} elsif (eval 'use Plack::Handler::Monoceros; 1') {
	print STDERR "Using Monoceros\n";
	$server = Plack::Handler::Monoceros->new(
		port    => $PORT,
		workers => $ARGV[1] || 8, # We expect lots of secret traffic
		argv    => [__PACKAGE__,],
	);
} elsif ( eval 'use Plack::Handler::Starman; 1') {
	print STDERR "Using Starman\n";
	$server = Plack::Handler::Starman->new(
		port    => $PORT,
		workers => $ARGV[1] || 8, # We expect lots of secret traffic
		argv    => [__PACKAGE__,],
	);
} else {
	print STDERR "Falling back to Plack-Standalone\n";
	use Plack::Handler::Standalone;
	$server = Plack::Handler::Standalone->new(
		port    => $PORT,
		workers => $ARGV[1] || 8, # We expect lots of secret traffic
		argv    => [__PACKAGE__,],
	);
}

$server->run(sub {Super::Secret->dance(Dancer::Request->new(env => shift))});

=head1 NAME

Super::Secret - It's super secret!!!

=head2 SYNOPSIS

  ./supersecret [PORT] [WORKERS]

=head2 DESCRIPTION

I said it's super secret!

Also this script depends on perl-Dancer.

=head2 AUTHORS

Dan Molik <dan@d3fy.net>

=head2 LICENSE

This supersecret script is license under the GNU GPL v3.
